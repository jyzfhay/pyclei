from protocols.http import HttpScanner
from protocols.dns import DnsScanner
from protocols.tcp import TcpScanner
from protocols.udp import UdpScanner
from protocols.ftp import FtpScanner
from protocols.smtp import SmtpScanner
from utils.matcher import match_http_response, match_dns_response, match_tcp_response, match_udp_response
from utils.extractor import extract_from_response

class WorkflowManager:
    def __init__(self, templates):
        self.templates = templates

    def execute(self):
        results = []
        for template in self.templates:
            for request in template.get('requests', []):
                protocol = request['protocol']
                if protocol in ['http', 'https']:
                    scanner = HttpScanner(request)
                    response = request.get('response')
                    if response and match_http_response(request, response):
                        results.append(f"Vulnerability found for {request['url']}")
                        extracted_data = extract_from_response(request, response)
                        if extracted_data:
                            results.append(f"Extracted Data: {extracted_data}")
                elif protocol == 'dns':
                    scanner = DnsScanner(request)
                    response = scanner.scan()
                    if match_dns_response(request, response):
                        results.append(f"Vulnerability found for {request['domain']}")
                elif protocol == 'tcp':
                    scanner = TcpScanner(request)
                    response = scanner.scan()
                    if match_tcp_response(request, response):
                        results.append(f"Vulnerability found for {request['host']}:{request['port']}")
                elif protocol == 'udp':
                    scanner = UdpScanner(request)
                    response = scanner.scan()
                    if match_udp_response(request, response):
                        results.append(f"Vulnerability found for {request['host']}:{request['port']}")
                elif protocol == 'ftp':
                    scanner = FtpScanner(request)
                    response = scanner.scan()
                    if str(request['match']['expected_response']) in str(response):
                        results.append(f"Vulnerability found for {request['host']}:{request['port']}")
                elif protocol == 'smtp':
                    scanner = SmtpScanner(request)
                    response = scanner.scan()
                    if str(request['match']['expected_response']) in str(response):
                        results.append(f"Vulnerability found for {request['host']}:{request['port']}")
        return results
