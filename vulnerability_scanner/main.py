import os
import asyncio
from rich.console import Console
from rich.panel import Panel
from rich.prompt import Prompt
from rich.table import Table
from scanner import run_scanner

console = Console()

def main():
    templates_dir = 'templates'
    template_files = [os.path.join(root, file) 
                      for root, dirs, files in os.walk(templates_dir) 
                      for file in files if file.endswith('.yaml')]

    if not template_files:
        console.print("[bold red]No templates found in the 'templates' directory.[/bold red]")
        return

    selected_template = select_template(template_files)

    base_url = Prompt.ask("Enter the Base URL for the scan")

    asyncio.run(run_scanner([selected_template], base_url))

def select_template(template_files):
    console.print(Panel("Please select a template to use:", title="Pyclei", subtitle="Template Selection", style="bold blue"))
    
    table = Table(show_header=True, header_style="bold magenta")
    table.add_column("Index", style="dim")
    table.add_column("Template Name", style="bold")

    for idx, template in enumerate(template_files, start=1):
        table.add_row(str(idx), template)

    console.print(table)

    template_idx = Prompt.ask("Enter the index of the template you want to use", default="1")
    
    try:
        selected_idx = int(template_idx) - 1
        if selected_idx < 0 or selected_idx >= len(template_files):
            raise ValueError
        selected_template = template_files[selected_idx]
    except ValueError:
        console.print("[bold red]Invalid selection. Please enter a valid index.[/bold red]")
        return select_template(template_files)
    
    return selected_template

if __name__ == "__main__":
    main()
