import json
import csv
import logging
import xml.etree.ElementTree as ET

logger = logging.getLogger(__name__)

def generate_report(results, format='json'):
    if format == 'json':
        generate_json_report(results)
    elif format == 'csv':
        generate_csv_report(results)
    elif format == 'xml':
        generate_xml_report(results)
    logger.info(f"Report generated in {format} format")

def generate_json_report(results):
    report = {
        'scan_summary': {
            'total_scans': len(results),
            'vulnerabilities_found': len([res for res in results if 'Vulnerability found' in res])
        },
        'details': results
    }
    with open('scan_report.json', 'w') as file:
        json.dump(report, file, indent=4)

def generate_csv_report(results):
    with open('scan_report.csv', 'w', newline='') as file:
        writer = csv.writer(file)
        writer.writerow(['Scan Result'])
        for result in results:
            writer.writerow([result])

def generate_xml_report(results):
    root = ET.Element("ScanReport")
    summary = ET.SubElement(root, "Summary")
    total_scans = ET.SubElement(summary, "TotalScans")
    total_scans.text = str(len(results))
    vulnerabilities = ET.SubElement(summary, "VulnerabilitiesFound")
    vulnerabilities.text = str(len([res for res in results if 'Vulnerability found' in res]))

    details = ET.SubElement(root, "Details")
    for result in results:
        item = ET.SubElement(details, "Item")
        item.text = result

    tree = ET.ElementTree(root)
    tree.write("scan_report.xml")
